{"version":3,"sources":["components/GoodsList/GoodsList.jsx","components/ButtonToShow/ButtonToShow.jsx","components/ButtonToReset/ButtonToReset.jsx","components/ButtonToReverse/ButtonToReverse.jsx","components/ButtonToSortAlphabet/ButtonToSortAlphabet.jsx","components/ButtonToSortLength/ButtonToSortLength.jsx","App.js","index.js"],"names":["GoodsList","React","memo","goods","List","animated","verticalAlign","map","good","Item","key","Image","avatar","src","Content","Header","propTypes","PropTypes","arrayOf","string","isRequired","ButtonToShow","visible","Button","basic","color","content","onClick","func","ButtonToReset","reset","ButtonToReverse","reverse","ButtonToSortAlphabet","sort","ButtonToSortLength","goodsFromServer","App","state","isGoodsVisible","isButtonVisible","isReversed","sortBy","handleVisibility","setState","handleReverse","sortByAlphabet","sortByLength","handleReset","this","copiedGoods","curr","next","localeCompare","length","className","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac7b34dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, List } from 'semantic-ui-react';\n\nexport const GoodsList = React.memo(\n  ({ goods }) => (\n    <List animated verticalAlign=\"middle\">\n      {goods.map(good => (\n        <List.Item key={good}>\n          <Image avatar src=\".\\images\\image.jpg\" />\n          <List.Content>\n            <List.Header>{good}</List.Header>\n          </List.Content>\n        </List.Item>\n      ))}\n    </List>\n  ),\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport const ButtonToShow = React.memo(\n  ({ visible }) => (\n    <Button basic color=\"pink\" content=\"Start\" onClick={visible} />\n  ),\n);\n\nButtonToShow.propTypes = {\n  visible: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport const ButtonToReset = React.memo(\n  ({ reset }) => (\n    <Button basic color=\"pink\" content=\"Reset\" onClick={reset} />\n  ),\n);\n\nButtonToReset.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport const ButtonToReverse = React.memo(\n  ({ reverse }) => (\n    <Button basic color=\"pink\" content=\"Reverse\" onClick={reverse} />\n  ),\n);\n\nButtonToReverse.propTypes = {\n  reverse: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport const ButtonToSortAlphabet = React.memo(\n  ({ sort }) => (\n    <Button basic color=\"pink\" content=\"Sort alphabetically\" onClick={sort} />\n  ),\n);\n\nButtonToSortAlphabet.propTypes = {\n  sort: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport const ButtonToSortLength = React.memo(\n  ({ sort }) => (\n    <Button basic color=\"pink\" content=\"Sort by length\" onClick={sort} />\n  ),\n);\n\nButtonToSortLength.propTypes = {\n  sort: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonToShow } from './components/ButtonToShow';\nimport { ButtonToReset } from './components/ButtonToReset';\nimport { ButtonToReverse } from './components/ButtonToReverse';\nimport { ButtonToSortAlphabet } from './components/ButtonToSortAlphabet';\nimport { ButtonToSortLength } from './components/ButtonToSortLength';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    isGoodsVisible: false,\n    isButtonVisible: true,\n    isReversed: false,\n    sortBy: '',\n  }\n\n  handleVisibility = () => {\n    this.setState(state => ({\n      isGoodsVisible: !state.isGoodsVisible,\n      isButtonVisible: !state.isButtonVisible,\n    }));\n  }\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortBy: 'Alphabet',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'Length',\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      sortBy: '',\n    });\n  }\n\n  render() {\n    const {\n      isGoodsVisible,\n      isButtonVisible,\n      goods,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const copiedGoods = [...goods];\n\n    copiedGoods.sort((curr, next) => {\n      switch (sortBy) {\n        case 'Alphabet':\n          return curr.localeCompare(next);\n\n        case 'Length':\n          return curr.length - next.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copiedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Goods</h1>\n        {isButtonVisible && (\n          <ButtonToShow visible={this.handleVisibility} />\n        )}\n        {isGoodsVisible && <GoodsList goods={copiedGoods} />}\n        <ButtonToReverse reverse={this.handleReverse} />\n        <ButtonToSortAlphabet sort={this.sortByAlphabet} />\n        <ButtonToReset reset={this.handleReset} />\n        <ButtonToSortLength sort={this.sortByLength} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}